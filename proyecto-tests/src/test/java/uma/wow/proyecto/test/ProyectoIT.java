package uma.wow.proyecto.test;
// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import es.uma.informatica.sii.anotaciones.Requisitos;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
public class ProyectoIT {
  private static final String UNIDAD_PERSISTENCIA_PRUEBAS = "ProyectoIT";
private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  
  private static String baseURL;
  private static Map<String,String> propiedadesExtra = new HashMap<>();
  
  @BeforeClass
  public static void setupClass() {
	  String server="localhost";
		try (InputStream is = ProyectoIT.class.getClassLoader().getResourceAsStream("pom.properties")) {
			Properties pomProperties = new Properties();
			pomProperties.load(is);
			server=pomProperties.getProperty("server.host");
			String databaseURL = "jdbc:mysql://"+server+":3306/sii";
			propiedadesExtra.put("javax.persistence.jdbc.url", databaseURL);
		} catch (IOException e) {
			e.printStackTrace();
		}
		baseURL="http://"+server+":8080/proyecto-war/";
  }
  
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
    BaseDatos.inicializaBaseDatos(UNIDAD_PERSISTENCIA_PRUEBAS, propiedadesExtra);
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  
  @Requisitos({"RF1, RF10"})
  @Test
  public void loginClienteYAdmin() {
	    driver.get(baseURL);
	    driver.manage().window().setSize(new Dimension(1051, 806));
	    driver.findElement(By.id("login:user")).click();
	    driver.findElement(By.id("login:user")).sendKeys("juan");
	    driver.findElement(By.id("login:pass")).click();
	    driver.findElement(By.id("login:pass")).sendKeys("juan");
	    driver.findElement(By.id("login:botonLogin")).click();
	    driver.findElement(By.id("saludo")).click();
	    assertThat(driver.findElement(By.id("saludo")).getText(), is("Aquí podrás usar tu aplicación"));
	    driver.findElement(By.cssSelector("body")).click();
	    driver.findElement(By.id("cerrarSes")).click();
	    driver.findElement(By.linkText("salir")).click();
	    driver.findElement(By.linkText("aquí")).click();
	    driver.findElement(By.id("login:user")).click();
	    driver.findElement(By.id("login:user")).sendKeys("ponciano");
	    driver.findElement(By.id("login:pass")).click();
	    driver.findElement(By.id("login:pass")).sendKeys("ponciano");
	    driver.findElement(By.id("login:botonLogin")).click();
	    driver.findElement(By.cssSelector("html")).click();
	    assertThat(driver.findElement(By.id("saludo")).getText(), is("Aquí podrás administrar tu aplicación"));
	    driver.findElement(By.id("cerrarSes")).click();
	    driver.findElement(By.linkText("salir")).click();
  }
}
